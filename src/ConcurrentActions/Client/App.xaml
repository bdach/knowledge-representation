<Application x:Class="Client.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:reactiveUi="http://reactiveui.net"
             xmlns:view="clr-namespace:Client.View">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Fluent;Component/Themes/Generic.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!-- Global styles -->
            
            <Style TargetType="reactiveUi:ViewModelViewHost">
                <Setter Property="VerticalContentAlignment" Value="Stretch" />
            </Style>
            
            <Style TargetType="ItemsControl">
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="BorderBrush" Value="LightSteelBlue" />
            </Style>

            <Style TargetType="{x:Type view:ExpressionButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="view:ExpressionButton">
                            <Border BorderThickness="1" DataContext="{Binding RelativeSource={RelativeSource AncestorType=view:ExpressionButton, Mode=FindAncestor}}">
                                <ContentPresenter />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="VerticalAlignment" Value="Stretch" />
                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                <Style.Resources>
                    <Style TargetType="Border">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Highlight}" Value="True">
                                <DataTrigger.Setters>
                                    <Setter Property="BorderBrush" Value="DodgerBlue" />
                                    <Setter Property="Background" Value="AliceBlue" />
                                </DataTrigger.Setters>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsFocused}" Value="True">
                                <Setter Property="BorderBrush" Value="DodgerBlue" />
                                <Setter Property="Background" Value="SkyBlue" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                    <Style TargetType="WrapPanel">
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="Background" Value="Transparent" />
                    </Style>
                </Style.Resources>
            </Style>

            <Style x:Key="BaseLabel" TargetType="TextBlock">
                <Setter Property="FontSize" Value="16" />
                <Setter Property="Padding" Value="1,2" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>
            <Style x:Key="ActionLabel" TargetType="TextBlock" BasedOn="{StaticResource BaseLabel}">
                <Setter Property="Typography.Capitals" Value="SmallCaps" />
            </Style>
            <Style x:Key="FluentLabel" TargetType="TextBlock" BasedOn="{StaticResource BaseLabel}">
                <Setter Property="FontStyle" Value="Italic" />
            </Style>
            <Style x:Key="StatementLabel" TargetType="TextBlock" BasedOn="{StaticResource BaseLabel}">
                <Setter Property="FontWeight" Value="Bold" />
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
